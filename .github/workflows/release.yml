name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        EXT=""
        if [ "$GOOS" = "windows" ]; then
          EXT=".exe"
        fi
        BINARY_NAME="ministo-$GOOS-$GOARCH$EXT"
        go build -ldflags="-s -w" -o "dist/$BINARY_NAME" ./cmd/ministo

        # Create archive
        cd dist
        if [ "$GOOS" = "windows" ]; then
          zip "../ministo-$GOOS-$GOARCH.zip" "$BINARY_NAME"
        else
          tar -czf "../ministo-$GOOS-$GOARCH.tar.gz" "$BINARY_NAME"
        fi
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: |
          *.zip
          *.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag }}
        name: Release ${{ github.event.inputs.tag }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: ./artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}